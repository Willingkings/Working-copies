(function($,undefined){
    var index = {
        init:function(){
            /*                                         ** 变身 **                                         */
            // 变身按钮
            // $("#transfiguration").hide();
            // $(".Eggshell").hide();
            /*                                         ** **** **                                         */
            this.getCurDate();
            this.getMpa();
            this.accounted();
            this.incomeTrend();
            this.userTrend();
            /*                                         ** H **                                         */
            this.Method();                  // 方法
            this.DataPort();                // 接口
            this.getAssetsData();           // 数字滚动
            this.getCylindricalityData();   // 柱形图
            this.UserEvents();              // 用户触发事件
            /*                                         ** * **                                         */
            // 自动刷新
            this.setInterval();

        },
        // 获取当前日期
        getCurDate:function(){

            var that = this;
            var date = new Date();
            var year = date.getFullYear();
            var month = date.getMonth()+1;
            var strDate = date.getDate();
            var hours = date.getHours();
            var minutes = date.getMinutes();
            var seconds = date.getSeconds();
            if(month>=1 && month<=9){
                month ="0"+month;
            }
            if(strDate>=1 &&strDate<=9){
                strDate = "0"+strDate;
            }
            if(hours>=0 && hours<=9){
                hours = "0"+hours;
            }
            if(minutes>=0 && minutes<=9){
                minutes = "0"+minutes;
            }
            if(seconds>=0 && seconds<=9){
                seconds = "0"+seconds;
            }
            var currentDate = year+"年"+month+"月"+strDate+"日"+" "+hours+":"+minutes+":"+seconds;
            var curTime = document.getElementById("curTime");
            curTime.innerText = currentDate;
            setTimeout(function(){
                that.getCurDate()
            },1000);
        },
        // 收入趋势
        incomeTrend:function(){
            $.ajax({
                url:'http://data.api.glchuxingwang.com/bigdata/income',
                type:'get',
                dataType:'json',
                success:function(data){
                    var incomeTrendData = data.data;
                    var incomeOption = {
                        title: {
                            text: '收入趋势（每月）',
                            textStyle: {
                                color: "#0eefeb",
                                fontSize: 18
                            }
                        },
                        grid: [{x: "15%",y: "25%",width: "75%",height: "60%", show: false}],
                        tooltip : {
                            trigger: 'axis',
                            axisPointer: {
                                type: 'cross',
                                label: {
                                    backgroundColor: '#283b56'
                                }
                            },
                            formatter: '{a0}: {c0}<br />{a1}: {c1}%'
                        },
                        legend: {
                            top: 30,
                            itemWidth: 20,
                            itemHeight: 8,
                            textStyle: {
                                color: '#676767',
                                fontSize:12
                            },
                            data: ['收入金额','增长率']
                        },
                        xAxis: [
                            {
                                type: 'category',
                                axisLine:{
                                    show: false,
                                    lineStyle: {color: "#fff"}
                                },
                                axisTick:{show: false},
                                interval: 6,
                                boundaryGap: true,
                                data: incomeTrendData.time,
                                axisPointer: {
                                    type: 'shadow'
                                }
                            },
                        ],
                        yAxis: [
                            {
                                type: 'value',
                                scale: true,
                                axisLine:{
                                    show: false,
                                    lineStyle: {color: "#fff"}
                                },
                                axisTick:{show: false},
                                max: 40000,
                                min: 0,
                                interval: 8000,
                            },
                            {
                                type: 'value',
                                scale: true,
                                axisLine:{show: false},
                                axisTick:{show: false},
                                axisLabel: {show:false},
                                max: 100,
                                min: 0,
                            }
                        ],
                        series : [
                            {
                                name:'收入金额',
                                type:'bar',
                                itemStyle: {
                                    normal: {
                                        color: new echarts.graphic.LinearGradient(
                                            0, 0, 0, 1,
                                            [
                                                {offset: 0, color: '#2ee2fd'},
                                                {offset: 1, color: '#2050fc'}
                                            ]
                                        )
                                    },
                                    emphasis: {
                                        color: new echarts.graphic.LinearGradient(
                                            0, 0, 0, 1,
                                            [
                                                {offset: 0, color: '#2ee2fd'},
                                                {offset: 1, color: '#2050fc'}
                                            ]
                                        )
                                    }
                                },
                                data:incomeTrendData.num
                            },
                            {
                                name:'增长率',
                                type:'line',
                                label: {
                                    show: true,
                                    position: 'top',
                                    formatter: '{c}%',
                                    color: "#fff"
                                },
                                yAxisIndex: 1,
                                itemStyle:{
                                    color: "#59b7f5"
                                },
                                lineStyle: {
                                    color: "#59b7f5"
                                },
                                data:incomeTrendData.growth
                            },
                        ]
                    };
                    var income = echarts.init(document.getElementById("income"));
                    income.setOption(incomeOption);
                }
            });
        },
        // 用户趋势
        userTrend:function(){
            $.ajax({
                url:'http://data.api.glchuxingwang.com/bigdata/user',
                type:'get',
                dataType:'json',
                success:function(data){
                    var userOption = {
                        title: {
                            text: '用户趋势（每月）',
                            textStyle: {
                                color: "#0eefeb",
                                fontSize: 18
                            }
                        },
                        grid: [{x: "15%",y: "25%",width: "75%",height: "60%", show: false}],
                        tooltip : {
                            trigger: 'axis',
                            axisPointer: {
                                type: 'cross',
                                label: {
                                    backgroundColor: '#283b56'
                                }
                            },
                        },
                        // color: ['#0db3d9','#f29422', '#f2cb04', '#d93d4a', '#0367a5','#15bd50'],
                        xAxis: [
                            {
                                type: 'category',
                                axisLine:{
                                    show: false,
                                    lineStyle: {color: "#fff"}
                                },
                                axisTick:{show: false},
                                interval: 6,
                                boundaryGap: true,
                                data: data.data.time,
                                axisPointer: {
                                    type: 'shadow'
                                }
                            },
                        ],
                        yAxis: [
                            {
                                type: 'value',
                                scale: true,
                                axisLine:{
                                    show: false,
                                    lineStyle: {color: "#fff"}
                                },
                                splitLine: {
                                    lineStyle: {
                                        color: "#3c5068",
                                        type: 'dashed',
                                    }
                                },
                                axisTick:{show: false},
                                max: 100,
                                min: 0,
                                interval: 10,
                            }
                        ],
                        series : [
                            {
                                name:'增长率',
                                type:'line',
                                label: {
                                    show: true,
                                    position: 'top',
                                    formatter: '{c}%',
                                    color: "#fff"
                                },
                                itemStyle:{
                                    color: "#0bb3da"
                                },
                                lineStyle: {
                                    color: "#51afec"
                                },
                                areaStyle: {
                                    color: {
                                        type: 'linear',
                                        x: 0,
                                        y: 0,
                                        x2: 0,
                                        y2: 1,
                                        colorStops: [{
                                            offset: 0, color: 'rgba(33,124,117,1)'
                                        }, {
                                            offset: 0.5, color: 'rgba(19,108,148,1)'
                                        }, {
                                            offset: 1, color: 'rgba(12,100,163,1)'
                                        }]
                                    }
                                },
                                data:data.data.growth
                            },
                        ]
                    };
                    var user = echarts.init(document.getElementById("user"));
                    user.setOption(userOption);
                }
            });
        },
        // 地图
        getMpa:function(){
            //计算运营天数
            var offsetDays = commonJS.getOffsetDays(Date.now(),(new Date(2017,7,19)).getTime());
            $("#operationDays").text(offsetDays);

            var arrayList = [
                {name:'凤鸣停车场',value: 600},
                {name:'遇龙河' , value: 700},
                {name:'C', value: 300},
                {name:'A', value: 400},
                {name:'D', value: 500},
                {name:'B', value: 600},
                {name:'雁山区',symbolSize: 25, value: 1000}
            ];
            $.get('json/guilin.json',function(data){
                echarts.registerMap('guilin',data);
                var chart = echarts.init(document.getElementById('map'));
                var geoCoordMap = {
                    "凤鸣停车场":[110.49729,24.761719],
                    "遇龙河":[110.394381,24.826767],
                    "临桂区":[110.27435,25.361638],
                    "雁山区":[110.297934,25.097054],
                };
                var convertData = function (data) {
                    var res = [];
                    for (var i = 0; i < data.length; i++) {
                        var geoCoord = geoCoordMap[data[i].name];
                        if (geoCoord) {
                            res.push(geoCoord.concat(data[i].value));
                        }
                    }
                    return res;
                };
                var option = {
                    title: {
                        text: '地域覆盖能力',
                        textStyle: {
                            color: "#0eefeb",
                            fontSize: 18,
                        },
                        top: "8%",
                        left: "35%"
                    },
                    layoutCenter: ['50%', '55%'],
                    layoutSize: "85%",
                    visualMap: {
                        type: 'continuous',
                        min: 0,
                        max: 1000,
                        show:false,
                        itemWidth: 10,
                        itemHeight: 70,
                        text:['High','Low'],
                        textStyle:{
                            color: "#ffffff"
                        },
                        color: ['orangered','yellow','lightskyblue']
                    },
                    geo: {
                        map: 'guilin',
                        roam: true,
                        label:{
                            normal:{
                                show:true,
                                textStyle:{
                                    color:'#fff',
                                    fontSize:'12px'
                                }
                            },
                            emphasis: {
                                show: false,
                                textStyle:{color:"#fff"}
                            }
                        },
                        itemStyle:{
                            normal:{
                                borderColor:'#fff',
                                areaColor:'#52b2fe'
                            },
                            emphasis: {
                                show:false,
                                borderWidth: .5,
                                borderColor: '#fff',
                                areaColor:"#2552df"
                            }
                        },
                    },
                    series:[
                        {
                        type:'effectScatter',
                        map:'guilin',
                        coordinateSystem: 'geo',
                        label:{
                            emphasis: {
                                show: false,
                                textStyle:{color:"#fff"}
                            }
                        },
                        symbolSize: function (val) {
                            return val[2] / 40;
                        },
                        itemStyle: {
                            emphasis: {
                                borderColor: '#fff',
                                borderWidth: 1
                            }
                        },
                        data: convertData(arrayList)
                    }
                ]
                };
                chart.setOption(option);
            })
        },
        // 占比
        accounted:function(){
            // option
            $.ajax({
                url:'http://data.api.glchuxingwang.com/bigdata/proportion',
                type:'get',
                dataType:'json',
                success:function(data){
                    var businessOption = {
                        tooltip : {
                            trigger: 'item',
                            formatter: "{a} <br/>{b} : {c} ({d}%)"
                        },
                        color: ['#0db3d9','#f29422', '#f2cb04', '#d93d4a', '#0367a5','#15bd50'],
                        legend: {
                            orient: 'vertical',
                            left: 210,
                            align: 'left',
                            top: 20,
                            itemWidth: 20,
                            itemHeight: 10,
                            itemGap: 5,
                            textStyle: {
                                color: '#fff',
                                fontSize:12
                            },
                            data: ['公共交通','景区门票','景区直通车','停车服务','运游联票']
                        },
                        series : [
                            {
                                name: '业务占比',
                                type: 'pie',
                                radius : '70%',
                                center: ['30%', '40%'],
                                label: {
                                    position: 'inside',
                                    formatter: '{d}%',
                                    align: 'center'
                                },
                                labelLine: {
                                    normal: {
                                        show: false
                                    }
                                },
                                data: data.data.business,
                                itemStyle: {
                                    emphasis: {
                                        shadowBlur: 10,
                                        shadowOffsetX: 0,
                                        shadowColor: 'rgba(0, 0, 0, 0.5)'
                                    }
                                }
                            }
                        ]
                    };
                    var districtOption = {
                        tooltip : {
                            trigger: 'item',
                            formatter: "{a} <br/>{b} : {c} ({d}%)"
                        },
                        color: ['#f2cb04', '#0367a5','#15bd50'],
                        legend: {
                            orient: 'vertical',
                            left: 210,
                            align: 'left',
                            top: 40,
                            itemWidth: 20,
                            itemHeight: 10,
                            itemGap: 5,
                            textStyle: {
                                color: '#fff',
                            },
                            data: ['阳朔县','市中','平乐县城']
                        },
                        series : [
                            {
                                name: '区域占比',
                                type: 'pie',
                                radius : '70%',
                                center: ['30%', '40%'],
                                label: {
                                    position: 'inside',
                                    formatter: '{d}%',
                                    align: 'center'
                                },
                                labelLine: {
                                    normal: {
                                        show: false
                                    }
                                },
                                data: data.data.area,
                                itemStyle: {
                                    emphasis: {
                                        shadowBlur: 10,
                                        shadowOffsetX: 0,
                                        shadowColor: 'rgba(0, 0, 0, 0.5)'
                                    }
                                }
                            }
                        ]
                    };
                    var channelOption = {
                        tooltip : {
                            trigger: 'item',
                            formatter: "{a} <br/>{b} : {c} ({d}%)"
                        },
                        color: ['#f2cb04', '#0367a5','#0367a5','#15bd50','#15bd50'],
                        legend: {
                            orient: 'vertical',
                            left: 210,
                            align: 'left',
                            top: 20,
                            itemWidth: 20,
                            itemHeight: 10,
                            itemGap: 5,
                            textStyle: {
                                color: '#fff',
                            },
                            data: ['APP','微信端','自助终端','窗口售票','人工']
                        },
                        series : [
                            {
                                name: '渠道占比',
                                type: 'pie',
                                radius : '70%',
                                center: ['30%', '40%'],
                                label: {
                                    position: 'inside',
                                    formatter: '{d}%',
                                    align: 'center'
                                },
                                labelLine: {
                                    normal: {
                                        show: false
                                    }
                                },
                                data: data.data.channel,
                                itemStyle: {
                                    emphasis: {
                                        shadowBlur: 10,
                                        shadowOffsetX: 0,
                                        shadowColor: 'rgba(0, 0, 0, 0.5)'
                                    }
                                }
                            }
                        ]
                    }
                    // 业务占比
                    var business = echarts.init(document.getElementById("business"));
                    business.setOption(businessOption);
                    // 区域占比
                    var district = echarts.init(document.getElementById("district"));
                    district.setOption(districtOption);
                    // 渠道占比
                    var channel = echarts.init(document.getElementById("channel"));
                    channel.setOption(channelOption);
                }
            });
        },

        /*                                         ** H **                                         */
        // 方法
        Method: function () {
            // 为全局函数创建另一个命名空间；//f1和f2成为myPlugin对象的方法，而
            jQuery.myPlugin = {
                // 填入数据（obj：对象，number：数字）
                numberData:function (obj, number) {
                    var Newobj = $(obj);
                    var Arr = number.toString().split("");
                    var NewHtml = "";
                    for(var i = 0; i < Arr.length; i++) {
                        NewHtml += "<li><ul></ul></li>";
                        if(i == Arr.length -1) {
                            Newobj.html(NewHtml);
                            var NewHtml2 = obj + " > li > ul"
                            // 填入数据（obj：对象，number：数字）
                            function numberData(obj2, number) {
                                var Arr = number.toString().split("");
                                var Obj1Html = "";
                                var Text = '<li>-</li>';
                                var NewHtml = "";
                                for(var i = 0; i < Arr.length; i++) {
                                    for(var j = 0; j < parseInt(Arr[i]) + 1; j++) {
                                        Text += '<li>' + j +'</li>';
                                        if(j == parseInt(Arr[i])) {
                                            NewHtml = Text;
                                            Text = '<li>-</li>';
                                            obj2[i].innerHTML = NewHtml;
                                        }
                                    }
                                }
                            }
                            numberData($(NewHtml2),number)
                        }
                    }
                },
                // 启动方法（obj：对象，number：数字）
                DisplacementDistance: function (obj,time) {
                    // .numBorderMoney > li > ul
                    var NewObj = $(obj + " > li > ul")
                    var NewObj1 = $(obj + " > li > ul > li")
                    for(var i = 0; i < NewObj.length; i++) {
                        var NewDistance = ((NewObj[i].innerHTML.split('</li>')).length - 2) * NewObj1[i].getBoundingClientRect().height.toFixed(2)
                        // 向上位移方法（obj: 位移对象,distance：位移距离,time: 位移时间,type: 过渡类型）
                        function upwardDisplacement(obj, distance, time, type) {
                            obj[i].style.transform = "translateY(-" + distance + ")";
                            obj[i].style.transition = "all " + time + " " + type;
                        }
                        upwardDisplacement($(obj + " > li > ul"), NewDistance + "px", time + "s", "linear")
                    }
                },
                // obj: 载入对象 , numericalData: 柱形数据, Xtext: X轴文字, gradualColor: 柱形渐变颜色,title:标题(title[0]:标题名,title[1]):坐标,title[2]):大小,title[3]):颜色),titlePosition:标题坐标,gridPosition: grid坐标
                Cylindricality: function (obj,numericalData,Xtext,gradualColor,title,gridPosition) {
                    var dom = document.getElementById(obj);
                    var myChart = echarts.init(dom);
                    var app = {};
                    var option = null;
                    // 柱形数据
                    var data = numericalData;
                    var yMax = 10;
                    var dataShadow = [];
                    for (var i = 0; i < data.length; i++) {
                        dataShadow.push(yMax);
                    }
                    option = {
                        //------------- 标题区域  ----------------
                        title: {
                            text: title[0],                       // 主标题
                            // 主标题内容样式
                            textStyle: {
                                color: title[3],                   // 主标题文字颜色
                                fontSize: title[2], // 让字体变大
                            },
                            subtext: '',                    // 副标题
                            padding: title[1]         // 标题定位
                        },
                        //------------- 提示框区域  ----------------
                        tooltip: {
                            width: 600,
                            trigger: 'axis',
                            backgroundColor:'rgba(255,255,255,0.8)',    //通过设置rgba调节背景颜色与透明度
                            color:'black',
                            borderWidth:'1',        // 提示边框厚度
                            borderColor:'gray',     // 提示边框颜色
                            padding: 10,
                        },
                        //-------------  grid区域  ----------------
                        grid: {
                            left: gridPosition[0],                      //组件离容器左侧的距离,百分比字符串或整型数字
                            top: gridPosition[1],                          //组件离容器上侧的距离，百分比字符串或整型数字
                            right: gridPosition[2],                    //组件离容器右侧的距离,百分比字符串或整型数字
                            bottom: gridPosition[3],                   //组件离容器下侧的距离,百分比字符串或整型数字
                            borderWidth: 1,
                            show: false,                // 是否显示直角坐标系网格
                            containLabel: false,       // grid 区域是否包含坐标轴的刻度标签
                            // 鼠标焦点放在图形上，产生的提示框
                            tooltip: {
                                show: true,
                                trigger: 'item',        // 触发类型
                                textStyle: {
                                    color: '#666',
                                },
                            }
                        },
                        // X轴
                        xAxis: [
                            {
                                show: true,                     // 是否显示
                                position: 'bottom',         // x轴位置
                                offset: 0,                  // x轴相对于默认位置的偏移
                                type: 'category',// 轴类型，默认'category
                                name: '',// 轴名称
                                nameLocation: 'end',// 轴名称相对位置
                                nameGap: 50,//---坐标轴名称与轴线之间的距离
                                data: Xtext,// X轴下文字
                                // 刻度
                                axisTick: {
                                    show: false,                //---是否显示
                                },
                                // X轴线样式
                                axisLine: {
                                    lineStyle: {
                                        color: "#375270"
                                    }
                                },
                                // X轴文字样式
                                axisLabel: {
                                    interval: 0,
                                    show: true,                  //---是否显示
                                    inside: false,               //---是否朝内
                                    rotate: 0,                   //---旋转角度
                                    margin: 20,                  //---刻度标签与轴线之间的距离

                                    textStyle:{
                                        fontSize: 10, // 让字体变大
                                        color:'#2D5386',//的颜色
                                    }
                                },
                            }
                        ],
                        // Y轴
                        yAxis: {
                            splitLine:{show: false},// 是否显示
                            show: true,
                            min: 0,
                            max: Math.ceil(Math.max.apply(null, data)),
                            interval: Math.ceil(Math.max.apply(null, data))/5,
                            // y轴位置
                            position:'left',
                            // y轴相对于默认位置的偏移
                            offset: 10,
                            // 轴类型，默认'category'
                            type:'value',
                            // 轴名称
                            name:'',
                            // 轴名称相对位置value
                            nameLocation:'end',
                            // 坐标轴名称样式
                            // 坐标轴名称与轴线之间的距离
                            nameGap:0,
                            //nameRotate:270,               //---坐标轴名字旋转
                            // 坐标轴 轴线
                            axisLine: {
                                show: false,                  //---是否显示
                            },
                            // 坐标轴 刻度
                            axisTick: {
                                show:false,                  //---是否显示
                            },
                            //---坐标轴 标签
                            axisLabel: {
                                padding: [-0, 0, 0, 0],
                                show: true,                  //---是否显示
                                inside:false,               //---是否朝内
                                rotate:0,                   //---旋转角度
                                formatter:"{value}",
                                margin: 20,                  //---刻度标签与轴线之间的距离
                                //color:'red',              //---默认取轴线的颜色
                                textStyle: {
                                    fontSize: 9, // 让字体变大
                                    color: '#7C9EB9'
                                }
                            }
                        },
                        dataZoom: [
                            {
                                type: 'inside'
                            }
                        ],
                        series: [
                            {
                                name: '销量',                           //---系列名称
                                type: 'bar',                            //---类型
                                itemStyle: {
                                    normal: {color: 'rgba(0,0,0,0.05)'}
                                },
                                legendHoverLink:true,       //---是否启用图例 hover 时的联动高亮
                                barGap:'-100%',
                                barWidth:'25',                           //---柱形宽度
                                barCategoryGap:'20%',                   //---柱形间距
                                animation: false,
                                itemStyle:{                 //---图形形状
                                    color: 'blue',
                                    barBorderRadius:[0,0,0,0],
                                },
                                label:{                     //---图形上的文本标签
                                    show:false,
                                    position:'insideTop',   //---相对位置
                                    color:'#eee',
                                },
                            },
                            {
                                type: 'bar',
                                itemStyle: {
                                    // 默认状态
                                    normal: {
                                        color: new echarts.graphic.LinearGradient(
                                            0, 0, 0, 1,
                                            [
                                                {offset: gradualColor[3], color: gradualColor[0]},
                                                {offset: gradualColor[4], color: gradualColor[1]},
                                                {offset: gradualColor[5], color: gradualColor[2]}
                                            ]
                                        )
                                    },
                                    // 高亮状态
                                    emphasis: {
                                        color: new echarts.graphic.LinearGradient(
                                            0, 0, 0, 1,
                                            [
                                                {offset: 0, color: '#2378f7'},
                                                {offset: 0.7, color: '#2378f7'},
                                                {offset: 1, color: '#83bff6'}
                                            ]
                                        )
                                    }
                                },
                                data: data
                            }
                        ]
                    };
                    // Enable data zoom when user click bar(当用户单击ba时启用数据缩放).
                    var zoomSize = 6;
                    myChart.on('click', function (params) {
                        console.log(dataAxis[Math.max(params.dataIndex - zoomSize / 2, 0)]);
                        myChart.dispatchAction({
                            type: 'dataZoom',
                            startValue: dataAxis[Math.max(params.dataIndex - zoomSize / 2, 0)],
                            endValue: dataAxis[Math.min(params.dataIndex + zoomSize / 2, data.length - 1)]
                        });
                    });
                    if (option && typeof option === "object") {
                        myChart.setOption(option, true);
                    }
                    myChart.setOption(option);
                    //根据窗口的大小变动图表 --- 重点
                    window.onresize = function(){
                        myChart.resize();
                        //myChart.resize();    //若有多个图表变动，可多写

                    }
            }
            }
        },
        // 数据接口
        DataPort: function () {
            var aDatas = {};
            // 为全局函数创建另一个命名空间；//f1和f2成为myPlugin对象的方法，而
            $.ajax({
                url:'http://pc.ticket.glchuxingwang.com/TicketAPI/BigData/GetMonthStatistics',
                type:'get',
                dataType:'json',
                success:function(data){
                    aDatas.sceniCthroughData = data.GGBS;
                    aDatas.sceniTicketsData = data.JQMP;
                    $("#Titele31").text(Math.round(aDatas.sceniCthroughData.OrderCount.AllValue/1000)/10);
                    $("#Titele32").text(Math.round(aDatas.sceniCthroughData.OrderNumber.AllValue/1000)/10);
                    $("#Titele33").text(Math.round(aDatas.sceniCthroughData.OrderTotalPrice.AllValue/1000)/10);
                    $("#Titele34").text(aDatas.sceniCthroughData.ProductCount.AllValue)
                    $("#Titele41").text(Math.round(aDatas.sceniTicketsData.OrderCount.AllValue/1000)/10);
                    $("#Titele42").text(Math.round(aDatas.sceniTicketsData.OrderNumber.AllValue/1000)/10);
                    $("#Titele43").text(Math.round(aDatas.sceniTicketsData.OrderTotalPrice.AllValue/1000)/10);
                    $("#Titele44").text(aDatas.sceniTicketsData.ProductCount.AllValue)
                }
            });
            jQuery.dataPort = {
                // 公共交通数据
                trafficData: function (index) {
                    var Data = [];
                    if(index == 0) {
                        Data = [10, 20, 30, 10, 20, 30]
                    } else if(index == 1) {
                        Data = [20, 20, 30, 40, 20, 20]
                    } else if(index == 2) {
                        Data = [20, 40, 30, 40, 10, 10]
                    } else if(index == 3) {
                        Data = [20, 10, 20, 40, 20, 40]
                    } else if(index == 4) {
                        Data = [10, 20, 20, 40, 10, 10]
                    }
                    $.myPlugin.Cylindricality("container",Data,['5月份', '6月份', '7月份', '8月份','9月份', '10月份'],['#2CD6FE','#2061FB','#2061FB',0,0.7,1],["公共交通",[11,10,0,20],20,"#27E4DE"] ,["13%","55%","16%","16%"]);
                },
                // 停车服务数据
                parkData: function (index) {
                    var Data = [];
                    if(index == 5) {
                        Data = [20, 30, 40, 30, 20, 10]
                    } else if(index == 6) {
                        Data = [10, 40, 10, 20, 30, 10]
                    } else if(index == 7) {
                        Data = [30, 30, 40, 30, 20,40]
                    } else if(index == 8) {
                        Data = [10, 10, 10, 10, 40, 10]
                    }
                    $.myPlugin.Cylindricality("container1",Data,['5月份', '6月份', '7月份', '8月份','9月份', '10月份'],['#FB4B60','#F48E54','#F48E54',0,0.7,1],["停车服务",[11,10,0,20],20,"#27E4DE"] ,["13%","55%","16%","16%"]);
                },
                // 运游数据
                transportedData: function (index) {
                    var Data = [];
                    if(index == 9) {
                        Data = [20, 40, 20, 40, 20, 40]
                    } else if(index == 10) {
                        Data = [30, 10, 10, 30, 30, 20]
                    } else if(index == 11) {
                        Data = [10, 10, 40,10, 10,10]
                    } else if(index == 12) {
                        Data = [40, 40, 40, 40, 40, 40]
                    }
                    $.myPlugin.Cylindricality("container2",Data,['5月份', '6月份', '7月份', '8月份','9月份', '10月份'],['#2EB596','#108EDB','#108EDB',0,0.7,1],["运游联票",[11,10,0,20],20,"#27E4DE"]  ,["13%","55%","16%","16%"]);
                },
                // 景区直通车
                sceniCthroughData: function (index) {
                    var Data = [];
                    var colors = [];
                    if(index == 0) {
                        Data = aDatas.sceniCthroughData.OrderCount.Value;
                        colors = ['#FBA133','#F77B35','#F25737',0,0.7,1];
                    } else if(index == 1) {
                        Data = aDatas.sceniCthroughData.OrderNumber.Value;
                        colors = ['#D8E426','#7FCF7B','#3EC0B8',0,0.7,1];
                    } else if(index == 2) {
                        Data = aDatas.sceniCthroughData.OrderTotalPrice.Value;
                        colors = ['#2AD5F2','#389AF0','#436BEF',0,0.7,1];
                    } else if(index == 3) {
                        Data = aDatas.sceniCthroughData.ProductCount.Value;
                        colors = ['#C135E9','#8037F2','#4739F9',0,0.7,1];
                    }
                    $.myPlugin.Cylindricality("container3",Data,['5月份', '6月份', '7月份', '8月份','9月份', '10月份'],colors,["景区直通车",[5,0,5,100],28,"#27E4DE"]  ,["18%","57%","16%","11%"]);
                },
                // 景区门票
                sceniTicketsData: function (index) {
                    var Data = [];
                    var colors = [];
                    if(index == 4) {
                        Data = aDatas.sceniTicketsData.OrderNumber.Value;
                        colors = ['#FBA133','#F77B35','#F25737',0,0.7,1]
                    } else if(index == 5) {
                        Data = aDatas.sceniTicketsData.OrderCount.Value;
                        colors = ['#D8E426','#7FCF7B','#3EC0B8',0,0.7,1]
                    } else if(index == 6) {
                        Data = aDatas.sceniTicketsData.OrderTotalPrice.Value;
                        colors = ['#2AD5F2','#389AF0','#436BEF',0,0.7,1]
                    } else if(index == 7) {
                        Data = aDatas.sceniTicketsData.ProductCount.Value;
                        colors = ['#C135E9','#8037F2','#4739F9',0,0.7,1]
                    }
                    $.myPlugin.Cylindricality("container4",Data,['5月份', '6月份', '7月份', '8月份','9月份', '10月份'],colors,["景区门票",[5,0,5,100],28,"#27E4DE"]  ,["18%","57%","16%","11%"]);
                }
            }
        },
        // 资产运营效益
        getAssetsData: function(){
            var _this = this;
            $.ajax({
            	url:"http://data.api.glchuxingwang.com/bigdata/operate",
            	dataType:"json",
            	type:"get",
            	success:function(res){
                    // 总收益
                    $.myPlugin.numberData(".numBorderMoney",res.data.total_income);
                    $.myPlugin.DisplacementDistance(".numBorderMoney",4);
                    // _this.unitValue(String(res.data.total_income).length,"#numBorderMoney");
                    // 访问量
                    $.myPlugin.numberData(".numBorderVisitTimes",String(res.data.page_view).slice(0,6));
                    $.myPlugin.DisplacementDistance(".numBorderVisitTimes",2);
                    // _this.unitValue(String(res.data.page_view).length,"#numBorderVisitTimes");
                    // 用户数
                    $.myPlugin.numberData(".numBorderUserNumber",String(res.data.users).slice(0,6));
                    $.myPlugin.DisplacementDistance(".numBorderUserNumber",1);
            	}
            })



        },
        // 载入柱形图
        getCylindricalityData: function () {
            $.ajax({
                url:'http://test.pc.ticket.glchuxingwang.com/TicketAPI/BigData/GetMonthStatistics',
                type:'get',
                dataType:'json',
                success:function(data){
                    // 景区直通车
                    $.myPlugin.Cylindricality("container3",data.GGBS.OrderNumber.Value,['5月份', '6月份', '7月份', '8月份','9月份', '10月份'],['#FBA133','#F77B35','#F25737',0,0.7,1],["景区直通车",[5,0,5,100],28,"#27E4DE"]  ,["18%","57%","16%","11%"]);
                    // 景区门票
                    $.myPlugin.Cylindricality("container4",data.JQMP.OrderNumber.Value,['5月份', '6月份', '7月份', '8月份','9月份', '10月份'],['#FBA133','#F77B35','#F25737',0,0.7,1],["景区门票",[5,0,5,100],28,"#27E4DE"]  ,["18%","57%","16%","11%"]);
                }
            });

            // 交通工具
            $.myPlugin.Cylindricality("container",[20, 20, 30, 40, 20, 20],['5月份', '6月份', '7月份', '8月份','9月份', '10月份'],['#2CD6FE','#2061FB','#2061FB',0,0.7,1],["公共交通",[11,10,0,20],20,"#27E4DE"] ,["13%","55%","16%","16%"]);
            // 停车服务
            $.myPlugin.Cylindricality("container1",[20, 20, 30, 40, 20, 20],['5月份', '6月份', '7月份', '8月份','9月份', '10月份'],['#FB4B60','#F48E54','#F48E54',0,0.7,1],["停车服务",[11,10,0,20],20,"#27E4DE"] ,["13%","55%","16%","16%"]);
            // 运游联票
            $.myPlugin.Cylindricality("container2",[20, 20, 30, 40, 20, 20],['5月份', '6月份', '7月份', '8月份','9月份', '10月份'],['#2EB596','#108EDB','#108EDB',0,0.7,1],["运游联票",[11,10,0,20],20,"#27E4DE"]  ,["13%","55%","16%","16%"]);
        },
        // 用户交互事件
        UserEvents: function () {
            // 总收益
            $.myPlugin.DisplacementDistance(".numBorderMoney",5);
            // 访问量
            $.myPlugin.DisplacementDistance(".numBorderVisitTimes",2);
            // 用户数
            $.myPlugin.DisplacementDistance(".numBorderUserNumber",1);
            // 持卡数
            $.myPlugin.DisplacementDistance(".numBorderCardNumber",4);
            // 公共交通,停车服务,运游联票
            $('.cylindricalityBoy').find('img').each(function(index, element) {
                var Img = $(this).attr("src");
                var ImgSrc = $(this).attr("ImgSrc");
                // 用户移入图标时
                $(this).mouseenter(function() {
                    $(this).attr('src',ImgSrc); // 改变图标
                    // 提取数据
                    if(index < 5) { // 公共交通数据
                        // 交通工具
                        $.dataPort.trafficData(index)
                    } else if(index < 9){   // 停车服务数据
                        $.dataPort.parkData(index)
                    } else if(index < 13) { // 运游联票数据
                        $.dataPort.transportedData(index)
                    }
                });
                // 用户移出图标时
                $(this).mouseleave (function() {
                    $(this).attr('src',Img);    // 改变图标
                });
            });
            // 景区
            $('.scenicAreaBox').find('img').each(function(index, element) {
                var Img = $(this).attr("src");
                var ImgSrc = $(this).attr("ImgSrc");
                $(this).mouseenter(function() {
                    $(this).attr('src',ImgSrc);
                    // 提取数据
                    if(index < 4) { // 景区直通车数据
                        // 交通工具
                        $.dataPort.sceniCthroughData(index)
                    } else {   // 景区门票数据
                        $.dataPort.sceniTicketsData(index)
                    }
                });
                $(this).mouseleave (function() {
                    $(this).attr('src',Img);
                });
            });


            /*                                         ** 变身 **                                         */
            // 变身按钮
            // $("#transfiguration").one("click",function(){
            //     $("#transfiguration").hide();
            //     $(".Titele4 span").hide();
            //     $(".Titele3 span").hide();
            //     $(".Titele2 span").hide();
            //     $(".Titele1 span").hide();
            //     $(".Titele span").hide();
            //     $(".Eggshell").show();
            //     $(function(){
            //         // 随机数方法 x:最小值,y: 最大值
            //         function Random(x,y) {
            //             return parseInt(Math.random() * (x - y + 1) + y);
            //         }
            //         /*                           小点特效                       */
            //         // 小点标题显示消失方法 name: 定时器名, obj: 闪烁对象, num：闪烁总个数, time: 速度
            //         function Dot(name, obj, num, ShowLength, time) {
            //             // 闪烁方法 obj：闪烁对象 num：闪烁总个数
            //             function flicker(obj, num, ShowLength) {
            //                 $(obj).each(function(index, element) {
            //                     var i = index + 1;
            //                     if(ShowLength == 0) {
            //                         $(obj ).hide()
            //                     } else if(index >num - ShowLength) {
            //                         $(obj + ':nth-of-type('+ i +')').hide()
            //                     } else {
            //                         $(obj + ':nth-of-type('+ i +')').show()
            //                     }
            //                 })
            //             }
            //             var ShowLength = num;
            //             // 启动定时器方法
            //             var name = function (){
            //                 flicker(obj, num, ShowLength);
            //                 if(ShowLength == 0) {
            //                     ShowLength = num;
            //                 } else {
            //                     ShowLength -= 1;
            //                 }
            //             }
            //             clearInterval(name);  // 删除定时器
            //             setInterval(name, time); // 定时器
            //         }
            //         Dot("busTitle", '.Titele > div', 5, 5 , 1000);
            //         Dot("parkTitle", '.Titele1 > div', 4, 4, 2000);
            //         Dot("transported", '.Titele2 > div', 4, 4, 500);
            //         /*                            景区小点特效                       */
            //         // 启动定时器方法
            //         var conversion = function (){
            //             $(".Titele3 > div > img").each(function(index, element) {
            //                 $(this).attr('src',"./images/NewScenic" + Random(0,6) + ".png"); // 改变图标
            //             })
            //             $(".Titele4 > div > img").each(function(index, element) {
            //                 $(this).attr('src',"./images/NewScenic" + Random(0,6) + ".png"); // 改变图标
            //             })
            //         }
            //         clearInterval(conversion);  // 删除定时器
            //         setInterval(conversion,200); // 定时器
            //         /*                            柱形特效                       */
            //         // 启动定时器方法
            //         var getLoc = function (){
            //             $.myPlugin.Cylindricality("container",[Random(0,40),Random(0,40),Random(0,40),Random(0,40),Random(0,40),Random(0,40)],['', '', '', '','', ''],['#2CD6FE','#2061FB','#2061FB',0,0.7,1],["",[11,10,0,20],20,"#27E4DE"] ,["13%","55%","16%","16%"]);
            //             $.myPlugin.Cylindricality("container1",[Random(0,40),Random(0,40),Random(0,40),Random(0,40),Random(0,40),Random(0,40)],['', '', '', '','', ''],['#FB4B60','#F48E54','#F48E54',0,0.7,1],["",[11,10,0,20],20,"#27E4DE"] ,["13%","55%","16%","16%"]);
            //             $.myPlugin.Cylindricality("container2",[Random(0,40),Random(0,40),Random(0,40),Random(0,40),Random(0,40),Random(0,40)],['', '', '', '','', ''],['#2EB596','#108EDB','#108EDB',0,0.7,1],["",[11,10,0,20],20,"#27E4DE"]  ,["13%","55%","16%","16%"]);
            //             $.myPlugin.Cylindricality("container3",[Random(0,40),Random(0,40),Random(0,40),Random(0,40),Random(0,40),Random(0,40)],['', '', '', '','', ''],['#C7E234','#56C6A2','#56C6A2',0,0.7,1],["",[5,0,5,100],28,"#27E4DE"]  ,["18%","57%","16%","11%"]);
            //             $.myPlugin.Cylindricality("container4",[Random(0,40),Random(0,40),Random(0,40),Random(0,40),Random(0,40),Random(0,40)],['', '', '', '','', ''],['#CC34E7','#3F37FC','#3F37FC',0,0.7,1],["",[5,0,5,100],28,"#27E4DE"]  ,["18%","57%","16%","11%"]);
            //         }
            //         clearInterval(getLoc);  // 删除定时器
            //         setInterval(getLoc,200); // 定时器
            //     })
            // })
            /*                                         ** **** **                                         */
        },
        /*                                         ** * **                                         */
        // 计时器
        setInterval: function () {
            var _this = this;
            // 收入趋势
            setInterval(function(){ _this.incomeTrend() }, 60000 );
            // 用户趋势
            setInterval(function(){ _this.userTrend()}, 60000);
            // 占比
            setInterval(function(){ _this.accounted()}, 60000);
            // 数据接口
            setInterval(function(){ _this.DataPort()}, 60000 );
            // 载入柱形图
            setInterval(function(){ _this.getCylindricalityData()}, 60000);

        }
    };
    index.init();
})(jQuery);
